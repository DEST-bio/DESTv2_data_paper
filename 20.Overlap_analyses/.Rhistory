library(ggplot2)
library(UpSetR)
install.packages("UpSetR")
library(ggplot2)
library(UpSetR)
library(ComplexUpset)
install.packages("ComplexUpset")
library(ggplot2)
library(UpSetR)
library(ComplexUpset)
library(tidyverse)
library(reshape2)
fromList <- function (input) {
# Same as original fromList()...
elements <- unique(unlist(input))
data <- unlist(lapply(input, function(x) {
x <- as.vector(match(elements, x))
}))
data[is.na(data)] <- as.integer(0)
data[data != 0] <- as.integer(1)
data <- data.frame(matrix(data, ncol = length(input), byrow = F))
data <- data[which(rowSums(data) != 0), ]
names(data) <- names(input)
# ... Except now it conserves your original value names!
row.names(data) <- elements
return(data)
}
load(file=here::here("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/DESTv2_data_paper/20.Overlap_analyses/","overlaps.RData"))
load(file=here::here("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/DESTv2_data_paper/20.Overlap_analyses/","overlaps.RData"))
load("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/DESTv2_data_paper/20.Overlap_analyses/overlaps.RData")
d_reduced<-rbind(d[which(rowSums(d[names(l)[1:2]]) >= 1 & rowSums(d[names(l)[3:length(l)]]) >= 1),],
d[rowSums(d[names(l)[1:2]]) >= 1,])
d_reduced<-d_reduced[which(!duplicated(d_reduced$id)),names(l)]
sum(d_reduced$Dest_v2_xtx)
sum(d_reduced$Dest_v2_c2)
upset(d_reduced,intersect = names(l),sort_sets=FALSE,
base_annotations=list(
'Intersection size'=intersection_size(
text=list(
vjust=0.5,
hjust=-0.1,
angle=90)
)),width_ratio = 0.1,set_sizes = FALSE,keep_empty_groups=TRUE)
d
l
l$Erickson_et_al_2020
l$Dest_v2_c2
0.2*0.5
20000*0.1
