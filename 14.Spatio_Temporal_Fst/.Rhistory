mutate(pool_samp1 = rbinom(1, C, prob = freq1),
pool_samp2 = rbinom(1, C, prob = freq2)) %>% View
am.dat %>%
group_by(subpop,  MutID) %>%
mutate(evo_samp1 = rbinom(1, N, prob = freq1)/N,
evo_samp2 = rbinom(1, N, prob = freq2)/N
) %>%
mutate(Coverage = C) %>%
mutate(pool_samp1 = rbinom(1, C, prob = freq1),
pool_samp2 = rbinom(1, C, prob = freq2)) %>%
ggplot(aes(x=freq1, y = pool_samp1/C))
#### filtering parameters
am.dat %>%
group_by(subpop,  MutID) %>%
mutate(evo_samp1 = rbinom(1, N, prob = freq1)/N,
evo_samp2 = rbinom(1, N, prob = freq2)/N
) %>%
mutate(Coverage = C) %>%
mutate(pool_samp1 = rbinom(1, C, prob = freq1),
pool_samp2 = rbinom(1, C, prob = freq2)) %>%
ggplot(aes(x=freq1, y = pool_samp1/C)) + geom_point()
am.dat %>%
group_by(subpop,  MutID) %>%
mutate(evo_samp1 = rbinom(1, N, prob = freq1)/N,
evo_samp2 = rbinom(1, N, prob = freq2)/N
) %>%
mutate(Coverage = C) %>%
mutate(pool_samp1 = rbinom(1, C, prob = freq1),
pool_samp2 = rbinom(1, C, prob = freq2)) %>%
ggplot(aes(x=freq1, y = pool_samp1/C)) -> interm_step_1
interm_step_1
am.dat %>%
group_by(subpop,  MutID) %>%
mutate(evo_samp1 = rbinom(1, N, prob = freq1)/N,
evo_samp2 = rbinom(1, N, prob = freq2)/N
) %>%
mutate(Coverage = C) %>%
mutate(pool_samp1 = rbinom(1, C, prob = freq1),
pool_samp2 = rbinom(1, C, prob = freq2)) -> interm_step_1
interm_step_1
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1)
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  pool_samp1)
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1")
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),]
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>% dim
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>% dim
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>% View
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>% dim
700/100000
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>% .$MutID
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp2") %>%
.[complete.cases(.),] %>% .$MutID -> pf2
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp2) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp2") %>%
.[complete.cases(.),] %>% .$MutID -> pf2
pf2
pf1 %in% pf2
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>% .$MutID -> pf1
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp2) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp2") %>%
.[complete.cases(.),] %>% .$MutID -> pf2
pf1 %in% pf2
unique(pf1, pf2)
validated_mutations = unique(pf1, pf2)
interm_step_1 %>%
filter(MutID %in% validated_mutations)
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),]
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1:p9))
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1:p9)) %>% View()
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= average(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15))
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= mean(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15))
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15)
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15) %>% View
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15) %>%
filter(tot != C)
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15) %>%
filter(tot != C) %>% .$MutID -> pf1
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp2) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp2") %>%
.[complete.cases(.),]  group_by(Position) %>%
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp1) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp1") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15) %>%
filter(tot != C) %>% .$MutID -> pf1
interm_step_1 %>%
dplyr::select(subpop, MutID, MutType, Position, SelCoef, pool_samp2) %>%
dcast( MutID+MutType+Position+SelCoef~subpop, value.var =  "pool_samp2") %>%
.[complete.cases(.),] %>%
group_by(Position) %>%
mutate(tot= sum(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14+p15)/15) %>%
filter(tot != C) %>% .$MutID  -> pf2
validated_mutations = unique(pf1, pf2)
interm_step_1 %>%
filter(MutID %in% validated_mutations)
interm_step_1 %>%
filter(MutID %in% validated_mutations) %>% View
interm_step_1 %>%
filter(MutID %in% validated_mutations) ->
am.dat.flt.curated
gln
glm
am.dat.flt.curated %>% head
library(foreach)
i=validated_mutations[1]
i
am.dat.flt.curated[MutID==i]
filter(am.dat.flt.curated, MutID==i)
filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") )
t1 <- glm(pool_samp2~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial())
pool_samp2
t1 <- glm(pool_samp2/C~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial())
t1
t1 %>% summary()
t1 <- glm(pool_samp2/C~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=C)
am.dat.flt.curated
t1 <- glm(pool_samp2/Coverage~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t1
t1 %>% summary()
t0 <- glm(pool_samp2/Coverage~1,
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t0 %>% summary
t.aov <- anova(t0, t1, test="Chisq")
t.aov
am.dat.flt.curated %>% View
i=2005602
t0 <- glm(pool_samp2/Coverage~1,
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t0
t0 %>% summary()
t1 <- glm(pool_samp2/Coverage~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t1 %>% summary()
t.aov <- anova(t0, t1, test="Chisq")
t.aov
t.aov$`Pr(>Chi)`
t1
t1$coefficients
t1$coefficients[2]
data.frame(
MutID=i,
treat = "warm (+10)",
treat_beta = t1$coefficients[2],
p_lrt = t.aov$`Pr(>Chi)`[2])
test_lrt =
foreach(i=validated_mutations, .combine = "rbind")%do%{
t0 <- glm(pool_samp2/Coverage~1,
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t1 <- glm(pool_samp2/Coverage~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t.aov <- anova(t0, t1, test="Chisq")
data.frame(
MutID=i,
treat = "warm (+10)",
treat_beta = t1$coefficients[2],
p_lrt = t.aov$`Pr(>Chi)`[2])
}
test_lrt =
foreach(i=validated_mutations, .combine = "rbind")%do%{
message(paste(i))
t0 <- glm(pool_samp2/Coverage~1,
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t1 <- glm(pool_samp2/Coverage~(group),
data=filter(am.dat.flt.curated, MutID==i, group %in% c("control", "warm (+10)") ),
family=binomial(),
weights=Coverage)
t.aov <- anova(t0, t1, test="Chisq")
data.frame(
MutID=i,
treat = "warm (+10)",
treat_beta = t1$coefficients[2],
p_lrt = t.aov$`Pr(>Chi)`[2])
}
test_lrt
test_lrt %>% ggplot(aes(x=left_join(am.dat.flt.curated, test_lrt, by = MutID)
))
am.dat.flt.curated
test_lrt
left_join(am.dat.flt.curated, as.data.frame(test_lrt), by = "MutID")
left_join(am.dat.flt.curated, as.data.frame(test_lrt), by = "MutID") %>%
ggplot(aes(
x=pos,
y=-log10(p_lrt)
)) + geom_point()
left_join(am.dat.flt.curated, as.data.frame(test_lrt), by = "MutID") %>%
ggplot(aes(
x=Position,
y=-log10(p_lrt)
)) + geom_point()
left_join(am.dat.flt.curated, as.data.frame(test_lrt), by = "MutID") %>%
ggplot(aes(
x=Position,
y=-log10(p_lrt),
color=MutType,
size=SelCoef+1
)) + geom_point()
library(tidyverse)
library(tidyverse)
rnorn(1 , mean=0, sd=1)
rnorm
rnorm(n=1 , mean=0, sd=1)
rnorm(n=10 , mean=0, sd=1)
rnorm(n=10 , mean=0, sd=1) %>%
ggplot(aes(.)) + geom_histogram()
rnorm(n=10 , mean=0, sd=1)
rnorm(n=10 , mean=0, sd=1) %>%
ggplot() + geom_histogram()
rnorm(n=10 , mean=0, sd=1) %>%
ggplot(aes(y=.)) + geom_histogram()
rnorm(n=10 , mean=0, sd=1) %>%
as.data.frame()
rnorm(n=10 , mean=0, sd=1) %>%
as.data.frame() %>%
ggplot(aes(y=.)) + geom_histogram()
rnorm(n=10 , mean=0, sd=1) %>%
as.data.frame() %>%
ggplot(aes(x=.)) + geom_histogram()
rnorm(n=100 , mean=0, sd=1) %>%
as.data.frame() %>%
ggplot(aes(x=.)) + geom_histogram()
rnorm(n=1000 , mean=0, sd=1) %>%
as.data.frame() %>%
ggplot(aes(x=.)) + geom_histogram()
rnorm(n=10000 , mean=0, sd=1) %>%
as.data.frame() %>%
ggplot(aes(x=.)) + geom_histogram()
rnorm(n=100 , mean=1.2, sd=2.5) -> lower
rnorm(n=100 , mean=1.0, sd=2.3) -> upper
lower
upper
t.test(lower, upper)
rnorm(n=1000 , mean=1.2, sd=2.5) -> lower
rnorm(n=1000 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper)
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper)
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper)
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper)
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
tmp.out$p.value
out=c()
for(i in 1:100){
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out
sum(out < 0.05)
sum(out < 0.05)/100
sum(out < 0.05)/100 * 100
out=c()
for(i in 1:100){
rnorm(n=15 , mean=1.2, sd=2.5) -> lower
rnorm(n=15 , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
sum(out < 0.05)/100
out=c()
out.N=c()
for(n in seq(from=10, to = 100, by = 10)){
out=c()
for(i in 1:100){
rnorm(n=n , mean=1.2, sd=2.5) -> lower
rnorm(n=n , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out.N[n] = sum(out < 0.05)/100
}
out.N
for(i in 1:100){
rnorm(n=n , mean=1.2, sd=2.5) -> lower
rnorm(n=n , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out
sum(out < 0.05)/100
seq(from=10, to = 100, by = 10)
out.N=c()
for(k in 1:10){
out=c()
for(i in 1:100){
n=seq(from=10, to = 100, by = 10)
rnorm(n=n[k] , mean=1.2, sd=2.5) -> lower
rnorm(n=n[k] , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out.N[k] = sum(out < 0.05)/100
}
out.N.
out.N
n
out.N=c()
for(k in 1:10){
out=c()
for(i in 1:100){
n=seq(from=10, to = 1000, by = 100)
rnorm(n=n[k] , mean=1.2, sd=2.5) -> lower
rnorm(n=n[k] , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out.N[k] = sum(out < 0.05)/100
}
out.N
ggplot(aes(
x=seq(from=10, to = 1000, by = 100),
y=out.N
)) + geom_line() + geom_point()
out.N
data.frame(n=seq(from=10, to = 1000, by = 100),
power=out.N)
data.frame(n=seq(from=10, to = 1000, by = 100),
power=out.N) %>%
ggplot(aes(
x=n,
y=power
)) + geom_line() + geom_point()
n=seq(from=10, to = 1000, by = 100)
out.N=c()
for(k in 1:length(n)){
out=c()
for(i in 1:100){
rnorm(n=n[k] , mean=1.2, sd=2.5) -> lower
rnorm(n=n[k] , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out.N[k] = sum(out < 0.05)/100
}
data.frame(n=seq(from=10, to = 1000, by = 100),
power=out.N) %>%
ggplot(aes(
x=n,
y=power
)) + geom_line() + geom_point()
n=seq(from=10, to = 10000, by = 100)
out.N=c()
for(k in 1:length(n)){
out=c()
for(i in 1:100){
rnorm(n=n[k] , mean=1.2, sd=2.5) -> lower
rnorm(n=n[k] , mean=1.0, sd=2.3) -> upper
t.test(lower, upper) -> tmp.out
out[i] = tmp.out$p.value
}
out.N[k] = sum(out < 0.05)/100
}
data.frame(n=seq(from=10, to = 1000, by = 100),
power=out.N) %>%
ggplot(aes(
x=n,
y=power
)) + geom_line() + geom_point()
1:length(n)
n=seq(from=10, to = 10000, by = 100)
n
1:length(n)
data.frame(n=n,
power=out.N) %>%
ggplot(aes(
x=n,
y=power
)) + geom_line() + geom_point()
####
install.packages("nasapower")
?get_power
??get_power
ex.data.dat <- get_power(
community = "ag",
lonlat = c(-84.503907, 38.030420),
#pars = c("RH2M", "T2M", "PRECTOTCORR"),
dates = c(paste(2010, "-01-01", sep=""), paste(2022, "-12-31", sep="")),
temporal_api = "hourly",
time_standard="UTC"
)
get_power
library(nasapower)
ex.data.dat <- get_power(
community = "ag",
lonlat = c(-84.503907, 38.030420),
#pars = c("RH2M", "T2M", "PRECTOTCORR"),
dates = c(paste(2010, "-01-01", sep=""), paste(2022, "-12-31", sep="")),
temporal_api = "hourly",
time_standard="UTC"
)
get_power
12-3
9/2
8/3
2500*8
319688.04+232563.04+223213.04
runif(100)
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
runif(100) %>% mean
